execute pathogen#infect()

" ---- FILE SETTINGS ----

filetype plugin on
filetype indent on
syntax enable
syntax on

" java ctags settings
autocmd FileType java set tags=.tags

" search path
set path=$PWD/**

" buffer settings
set hidden
set noswapfile


" ---- VIEW SETTINGS ----

set nowrap
set relativenumber  " show relative line number
set ruler           " show column number
set hlsearch        " highlight search

" show vertical & horizontal lines crossing at cursor position
set cursorline
set cursorcolumn
hi CursorLine ctermbg=234
hi CursorColumn ctermbg=234

set background=dark
" colorscheme darkblue
" colorscheme torte
colorscheme zellner

" show unwanted characters: trailing/beginning whitespaces and tabs
highlight tabs ctermbg=darkgreen guibg=darkgreen
match tabs /\t/

" show whitespaces at beginning of line
highlight ws_beg ctermbg=blue guibg=blue
match ws_beg /^\s\+/
" autocmd BufWinEnter * match ws_beg /^\s\+/
" autocmd InsertLeave * match ws_beg /^\s\+/
" autocmd BufWinLeave * call clearmatches()

" show trailing whitespaces
highlight ws_end ctermbg=red guibg=red
match ws_end /\s\+$/
autocmd BufWinEnter * match ws_end /\s\+$/
autocmd InsertEnter * match ws_end /\s\+\%#\@<!$/
autocmd InsertLeave * match ws_end /\s\+$/
autocmd BufWinLeave * call clearmatches()

set showmatch


" ---- TAB/SPACING SETTINGS ----

set foldmethod=indent
set nofoldenable
set foldnestmax=10
set foldlevel=1

set expandtab           " swap tab with spaces
set tabstop=2           " how many space a tab char takes
set shiftwidth=2        " how many spaces are added/removed with shift commands
set softtabstop=2       " backspace remove as many space a tab width
set autoindent

autocmd FileType ruby setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType python setlocal ts=2 sts=2 sw=2 expandtab

autocmd FileType java setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType java set colorcolumn=101

autocmd FileType scala setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType scala set colorcolumn=101

autocmd FileType c setlocal ts=8 sts=8 sw=8 noexpandtab
autocmd FileType c set colorcolumn=81

autocmd FileType go compiler go
autocmd FileType go setlocal ts=2 sts=2 sw=2 noexpandtab
autocmd FileType go set colorcolumn=

autocmd FileType *.ml setlocal ts=2 sts=2 sw=2 noexpandtab
autocmd FileType *.ml set colorcolumn=45


" ---- CUSTOM MAPPING ----

" show buffer list and wait for a buffer number
nnoremap gb :ls<CR>:b<Space>

" manually mapping Explore
cmap :E<CR> :Explore<CR>

" switch between buffers
nmap <C-b>n :bn<CR>
nmap <C-b>p :bp<CR>

" recenter screen
nmap <space> zz

" use mouse wheel to scroll
set mouse=a
map <ScrollWheelUp> <C-Y><C-Y><C-Y>
map <ScrollWheelDown> <C-E><C-E><C-E>

" remap {} to ^K and ^J for paragraph navigation
noremap <C-J> }
noremap <C-K> {

inoremap <C-h> <left>
inoremap <C-j> <down>
inoremap <C-k> <up>
inoremap <C-l> <right>

" better split tabs navigation
noremap <C-H> <C-W><C-H>
noremap <C-L> <C-W><C-L>

" Whole file navigation
noremap H 0
noremap L $
noremap K gg
noremap J G

" tab navigation
nnoremap gh gT
nnoremap gl gt
nnoremap gH 1gt
nnoremap gL 1gtgT

" remap join-lines from 'J', and turn off Ex mode too
noremap Q J

" disable arrow keys
noremap <up> <nop>
noremap <down> <nop>
noremap <left> <nop>
noremap <right> <nop>


" ---- go LANG SETTINGS ----

let g:golang_goroot = "$HOME/Go/" " should probably use GOROOT ?
let g:go_fmt_command = "goimports"
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1


" ---- OCAML MACROS ----

" let @o = 'dwA€kb€kb€kb^'
" let @p = C(* "*€kb *)^'



" OCaml


let g:opamshare = substitute(system('opam config var share'),'\n$','','''')
execute "set rtp+=" . g:opamshare . "/merlin/vim"

execute "helptags " . g:opamshare . "/merlin/vim/doc"

set omnifunc=syntaxcomplete#Complete
set completeopt=longest,menuone
